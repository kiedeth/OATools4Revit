<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>