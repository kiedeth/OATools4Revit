<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIAAoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAkW1tB2ZmMwUAAAAEAAAABAAAAAQ/AAAEAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAABAAAAAQAAAAEAAAABAAA
        AASRkW0H////AQAAAAAAAAAAAAAAAAAAAACPeGZXm4Nw4ZV/btyVf2vclX9r3JiBb96Pd2S+qqpVAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJB3Y1ychXDelX9u3JV/
        a9yVf2vcmoNx3Y56Zbp/fz8EAAAAAAAAAAAAAAAAAAAAAHtiUh+bhnP/2MSy/9bCsP/WwrD/2sa0/6mS
        fv98YlMxAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAjHVittC6
        pv/ZxbP/1cGv/9vHtf/Jsp7/iHFelAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIt2YrXQuqj/2se2/9bD
        sv/cybj/wquY/4VsWXgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHdV
        RA+Xgm3v2MSz/9fEs//Ww7L/28i3/6mTgP96Y1A2AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgGhVXbii
        jv/ax7b/1MGw/9fEtP/QvKn/jHdlwgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAf2hTTLKbiP/ax7b/1MGw/9bEs//Tv63/kXlm2AAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABrXUMTmINw8dfDsv/VwrH/1cKx/9jEs/+ahnL3eltHGQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACHb16VybOg/9nGtf/UwbD/2se2/8Wvm/+Gb1yHAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACIc2CszLek/9nGtf/UwbD/2se2/7iijv9/aFRYAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAJF7Z9vUwK7/1sOy/9TBsP/ZxrX/p5B9/31kUDMAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAIFoVlO1nor/2se2/9TBsP/YxrX/xbGf/4pzYN+Od2OxjHVksox1
        ZLKMdWSyjHVksox1ZLKMdWSyjHVkso53Y7GIcV67oYx6/9jGtP/UwbD/18Sz/9O+rP+QeWbWAAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdWJODZWAbO3WwrD/1cOy/9TCsP/Sv67/y7el/8+6
        qP/Qu6j/0Luo/9C7qP/Qu6j/0Luo/9C7qP/Qu6j/0Luo/824pv/Nuqn/1cKx/9TBsP/ax7b/xK6a/4Zu
        W4MAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAh3Feosq1ov/ZxrX/1MGw/9XC
        sf/YxbT/2MW0/9jFtP/YxbT/2MW0/9jFtP/YxbT/2MW0/9jFtP/YxbT/2MW0/9bDsv/UwbD/1MGw/9nG
        tf+lj3z/emRPMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB/Z1JKsZuH/9rH
        tv/UwbD/1MGw/9TBsP/YxbT/2ca1/9nGtf/ZxrX/2ca1/9nGtf/ZxrX/2ca1/9nGtf/Ww7L/1MGw/9TB
        sP/XxLP/0r6s/456ZdMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHFV
        OAmSfWvn1cGv/9bDsv/VwrH/0r+u/8Gtm//Is6D/zLaj/8y2o//MtqP/zLaj/8y2o//MtqP/wa2b/8q2
        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
        AAAAAAAAAAAAAAAAAAAAAAAA
</value>
  </data>
</root>